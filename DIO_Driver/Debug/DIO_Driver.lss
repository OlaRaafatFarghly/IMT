
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000660  00000000  00000000  00000744  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000043f  00000000  00000000  00000da4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 6f 03 	call	0x6de	; 0x6de <main>
  64:	0c 94 76 03 	jmp	0x6ec	; 0x6ec <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <MDIO_voidInt>:
#include "../Include/MCAL/DIO/DIO_Interface.h"
#include "../Include/MCAL/DIO/DIO_Private.h"
#include "../Include/MCAL/DIO/DIO_Configuration.h"

void MDIO_voidInt(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRA_REG  =  CONC_BIT(PORTA_PIN7_DIRECTION, PORTA_PIN6_DIRECTION, PORTA_PIN5_DIRECTION, PORTA_PIN4_DIRECTION, PORTA_PIN3_DIRECTION, PORTA_PIN2_DIRECTION, PORTA_PIN1_DIRECTION, PORTA_PIN0_DIRECTION);
  74:	ea e3       	ldi	r30, 0x3A	; 58
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	8f ef       	ldi	r24, 0xFF	; 255
  7a:	80 83       	st	Z, r24
	PORTA_REG = CONC_BIT(PORTA_PIN7_VALUE, PORTA_PIN6_VALUE, PORTA_PIN5_VALUE, PORTA_PIN4_VALUE, PORTA_PIN3_VALUE, PORTA_PIN2_VALUE, PORTA_PIN1_VALUE, PORTA_PIN0_VALUE);
  7c:	eb e3       	ldi	r30, 0x3B	; 59
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	10 82       	st	Z, r1

	DDRB_REG  =  CONC_BIT(PORTB_PIN7_DIRECTION, PORTB_PIN6_DIRECTION, PORTB_PIN5_DIRECTION, PORTB_PIN4_DIRECTION, PORTB_PIN3_DIRECTION, PORTB_PIN2_DIRECTION, PORTB_PIN1_DIRECTION, PORTB_PIN0_DIRECTION);
  82:	e7 e3       	ldi	r30, 0x37	; 55
  84:	f0 e0       	ldi	r31, 0x00	; 0
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	80 83       	st	Z, r24
	PORTB_REG = CONC_BIT(PORTB_PIN7_VALUE, PORTB_PIN6_VALUE, PORTB_PIN5_VALUE, PORTB_PIN4_VALUE, PORTB_PIN3_VALUE, PORTB_PIN2_VALUE, PORTB_PIN1_VALUE, PORTB_PIN0_VALUE);
  8a:	e8 e3       	ldi	r30, 0x38	; 56
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	10 82       	st	Z, r1

	DDRC_REG  =  CONC_BIT(PORTC_PIN7_DIRECTION, PORTC_PIN6_DIRECTION, PORTC_PIN5_DIRECTION, PORTC_PIN4_DIRECTION, PORTC_PIN3_DIRECTION, PORTC_PIN2_DIRECTION, PORTC_PIN1_DIRECTION, PORTC_PIN0_DIRECTION);
  90:	e4 e3       	ldi	r30, 0x34	; 52
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	80 83       	st	Z, r24
	PORTC_REG = CONC_BIT(PORTC_PIN7_VALUE, PORTC_PIN6_VALUE, PORTC_PIN5_VALUE, PORTC_PIN4_VALUE, PORTC_PIN3_VALUE, PORTC_PIN2_VALUE, PORTC_PIN1_VALUE, PORTC_PIN0_VALUE);
  98:	e5 e3       	ldi	r30, 0x35	; 53
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	10 82       	st	Z, r1

	DDRD_REG  =  CONC_BIT(PORTD_PIN7_DIRECTION, PORTD_PIN6_DIRECTION, PORTD_PIN5_DIRECTION, PORTD_PIN4_DIRECTION, PORTD_PIN3_DIRECTION, PORTD_PIN2_DIRECTION, PORTD_PIN1_DIRECTION, PORTD_PIN0_DIRECTION);
  9e:	e1 e3       	ldi	r30, 0x31	; 49
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	8f ef       	ldi	r24, 0xFF	; 255
  a4:	80 83       	st	Z, r24
	PORTD_REG = CONC_BIT(PORTD_PIN7_VALUE, PORTD_PIN6_VALUE, PORTD_PIN5_VALUE, PORTD_PIN4_VALUE, PORTD_PIN3_VALUE, PORTD_PIN2_VALUE, PORTD_PIN1_VALUE, PORTD_PIN0_VALUE);
  a6:	e2 e3       	ldi	r30, 0x32	; 50
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
}
  ac:	cf 91       	pop	r28
  ae:	df 91       	pop	r29
  b0:	08 95       	ret

000000b2 <MDIO_voidSetPinDirection>:

void MDIO_voidSetPinDirection (u8 A_u8PortId,u8 A_u8PinId,u8 A_u8DirectionId)
{
  b2:	df 93       	push	r29
  b4:	cf 93       	push	r28
  b6:	cd b7       	in	r28, 0x3d	; 61
  b8:	de b7       	in	r29, 0x3e	; 62
  ba:	2d 97       	sbiw	r28, 0x0d	; 13
  bc:	0f b6       	in	r0, 0x3f	; 63
  be:	f8 94       	cli
  c0:	de bf       	out	0x3e, r29	; 62
  c2:	0f be       	out	0x3f, r0	; 63
  c4:	cd bf       	out	0x3d, r28	; 61
  c6:	89 83       	std	Y+1, r24	; 0x01
  c8:	6a 83       	std	Y+2, r22	; 0x02
  ca:	4b 83       	std	Y+3, r20	; 0x03
	switch(A_u8PortId)
  cc:	89 81       	ldd	r24, Y+1	; 0x01
  ce:	28 2f       	mov	r18, r24
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	3d 87       	std	Y+13, r19	; 0x0d
  d4:	2c 87       	std	Y+12, r18	; 0x0c
  d6:	8c 85       	ldd	r24, Y+12	; 0x0c
  d8:	9d 85       	ldd	r25, Y+13	; 0x0d
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	91 05       	cpc	r25, r1
  de:	09 f4       	brne	.+2      	; 0xe2 <MDIO_voidSetPinDirection+0x30>
  e0:	4c c0       	rjmp	.+152    	; 0x17a <MDIO_voidSetPinDirection+0xc8>
  e2:	2c 85       	ldd	r18, Y+12	; 0x0c
  e4:	3d 85       	ldd	r19, Y+13	; 0x0d
  e6:	22 30       	cpi	r18, 0x02	; 2
  e8:	31 05       	cpc	r19, r1
  ea:	2c f4       	brge	.+10     	; 0xf6 <MDIO_voidSetPinDirection+0x44>
  ec:	8c 85       	ldd	r24, Y+12	; 0x0c
  ee:	9d 85       	ldd	r25, Y+13	; 0x0d
  f0:	00 97       	sbiw	r24, 0x00	; 0
  f2:	71 f0       	breq	.+28     	; 0x110 <MDIO_voidSetPinDirection+0x5e>
  f4:	e2 c0       	rjmp	.+452    	; 0x2ba <MDIO_voidSetPinDirection+0x208>
  f6:	2c 85       	ldd	r18, Y+12	; 0x0c
  f8:	3d 85       	ldd	r19, Y+13	; 0x0d
  fa:	22 30       	cpi	r18, 0x02	; 2
  fc:	31 05       	cpc	r19, r1
  fe:	09 f4       	brne	.+2      	; 0x102 <MDIO_voidSetPinDirection+0x50>
 100:	71 c0       	rjmp	.+226    	; 0x1e4 <MDIO_voidSetPinDirection+0x132>
 102:	8c 85       	ldd	r24, Y+12	; 0x0c
 104:	9d 85       	ldd	r25, Y+13	; 0x0d
 106:	83 30       	cpi	r24, 0x03	; 3
 108:	91 05       	cpc	r25, r1
 10a:	09 f4       	brne	.+2      	; 0x10e <MDIO_voidSetPinDirection+0x5c>
 10c:	a0 c0       	rjmp	.+320    	; 0x24e <MDIO_voidSetPinDirection+0x19c>
 10e:	d5 c0       	rjmp	.+426    	; 0x2ba <MDIO_voidSetPinDirection+0x208>
	{
	case PORTA:
		switch(A_u8DirectionId)
 110:	8b 81       	ldd	r24, Y+3	; 0x03
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	3b 87       	std	Y+11, r19	; 0x0b
 118:	2a 87       	std	Y+10, r18	; 0x0a
 11a:	8a 85       	ldd	r24, Y+10	; 0x0a
 11c:	9b 85       	ldd	r25, Y+11	; 0x0b
 11e:	00 97       	sbiw	r24, 0x00	; 0
 120:	c9 f0       	breq	.+50     	; 0x154 <MDIO_voidSetPinDirection+0xa2>
 122:	2a 85       	ldd	r18, Y+10	; 0x0a
 124:	3b 85       	ldd	r19, Y+11	; 0x0b
 126:	21 30       	cpi	r18, 0x01	; 1
 128:	31 05       	cpc	r19, r1
 12a:	39 f5       	brne	.+78     	; 0x17a <MDIO_voidSetPinDirection+0xc8>
		{
		case PIN_OUTPUT:
			SET_BIT(DDRA_REG , A_u8PinId);
 12c:	aa e3       	ldi	r26, 0x3A	; 58
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	ea e3       	ldi	r30, 0x3A	; 58
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8a 81       	ldd	r24, Y+2	; 0x02
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <MDIO_voidSetPinDirection+0x98>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <MDIO_voidSetPinDirection+0x94>
 14e:	84 2b       	or	r24, r20
 150:	8c 93       	st	X, r24
 152:	13 c0       	rjmp	.+38     	; 0x17a <MDIO_voidSetPinDirection+0xc8>
			break;
		case PIN_INPUT:
			CLR_BIT(DDRA_REG , A_u8PinId);
 154:	aa e3       	ldi	r26, 0x3A	; 58
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	ea e3       	ldi	r30, 0x3A	; 58
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	48 2f       	mov	r20, r24
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	28 2f       	mov	r18, r24
 164:	30 e0       	ldi	r19, 0x00	; 0
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	02 c0       	rjmp	.+4      	; 0x170 <MDIO_voidSetPinDirection+0xbe>
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	2a 95       	dec	r18
 172:	e2 f7       	brpl	.-8      	; 0x16c <MDIO_voidSetPinDirection+0xba>
 174:	80 95       	com	r24
 176:	84 23       	and	r24, r20
 178:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	case PORTB:
		switch(A_u8DirectionId)
 17a:	8b 81       	ldd	r24, Y+3	; 0x03
 17c:	28 2f       	mov	r18, r24
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	39 87       	std	Y+9, r19	; 0x09
 182:	28 87       	std	Y+8, r18	; 0x08
 184:	88 85       	ldd	r24, Y+8	; 0x08
 186:	99 85       	ldd	r25, Y+9	; 0x09
 188:	00 97       	sbiw	r24, 0x00	; 0
 18a:	c9 f0       	breq	.+50     	; 0x1be <MDIO_voidSetPinDirection+0x10c>
 18c:	28 85       	ldd	r18, Y+8	; 0x08
 18e:	39 85       	ldd	r19, Y+9	; 0x09
 190:	21 30       	cpi	r18, 0x01	; 1
 192:	31 05       	cpc	r19, r1
 194:	39 f5       	brne	.+78     	; 0x1e4 <MDIO_voidSetPinDirection+0x132>
		{
		case PIN_OUTPUT:
			SET_BIT(DDRB_REG , A_u8PinId);
 196:	a7 e3       	ldi	r26, 0x37	; 55
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e7 e3       	ldi	r30, 0x37	; 55
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	48 2f       	mov	r20, r24
 1a2:	8a 81       	ldd	r24, Y+2	; 0x02
 1a4:	28 2f       	mov	r18, r24
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 2e       	mov	r0, r18
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <MDIO_voidSetPinDirection+0x102>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <MDIO_voidSetPinDirection+0xfe>
 1b8:	84 2b       	or	r24, r20
 1ba:	8c 93       	st	X, r24
 1bc:	13 c0       	rjmp	.+38     	; 0x1e4 <MDIO_voidSetPinDirection+0x132>
			break;
		case PIN_INPUT:
			CLR_BIT(DDRB_REG , A_u8PinId);
 1be:	a7 e3       	ldi	r26, 0x37	; 55
 1c0:	b0 e0       	ldi	r27, 0x00	; 0
 1c2:	e7 e3       	ldi	r30, 0x37	; 55
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	48 2f       	mov	r20, r24
 1ca:	8a 81       	ldd	r24, Y+2	; 0x02
 1cc:	28 2f       	mov	r18, r24
 1ce:	30 e0       	ldi	r19, 0x00	; 0
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <MDIO_voidSetPinDirection+0x128>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	2a 95       	dec	r18
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <MDIO_voidSetPinDirection+0x124>
 1de:	80 95       	com	r24
 1e0:	84 23       	and	r24, r20
 1e2:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	case PORTC:
		switch(A_u8DirectionId)
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	28 2f       	mov	r18, r24
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	3f 83       	std	Y+7, r19	; 0x07
 1ec:	2e 83       	std	Y+6, r18	; 0x06
 1ee:	8e 81       	ldd	r24, Y+6	; 0x06
 1f0:	9f 81       	ldd	r25, Y+7	; 0x07
 1f2:	00 97       	sbiw	r24, 0x00	; 0
 1f4:	c9 f0       	breq	.+50     	; 0x228 <MDIO_voidSetPinDirection+0x176>
 1f6:	2e 81       	ldd	r18, Y+6	; 0x06
 1f8:	3f 81       	ldd	r19, Y+7	; 0x07
 1fa:	21 30       	cpi	r18, 0x01	; 1
 1fc:	31 05       	cpc	r19, r1
 1fe:	39 f5       	brne	.+78     	; 0x24e <MDIO_voidSetPinDirection+0x19c>
		{
		case PIN_OUTPUT:
			SET_BIT(DDRC_REG , A_u8PinId);
 200:	a4 e3       	ldi	r26, 0x34	; 52
 202:	b0 e0       	ldi	r27, 0x00	; 0
 204:	e4 e3       	ldi	r30, 0x34	; 52
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	80 81       	ld	r24, Z
 20a:	48 2f       	mov	r20, r24
 20c:	8a 81       	ldd	r24, Y+2	; 0x02
 20e:	28 2f       	mov	r18, r24
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 2e       	mov	r0, r18
 218:	02 c0       	rjmp	.+4      	; 0x21e <MDIO_voidSetPinDirection+0x16c>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	0a 94       	dec	r0
 220:	e2 f7       	brpl	.-8      	; 0x21a <MDIO_voidSetPinDirection+0x168>
 222:	84 2b       	or	r24, r20
 224:	8c 93       	st	X, r24
 226:	13 c0       	rjmp	.+38     	; 0x24e <MDIO_voidSetPinDirection+0x19c>
			break;
		case PIN_INPUT:
			CLR_BIT(DDRC_REG , A_u8PinId);
 228:	a4 e3       	ldi	r26, 0x34	; 52
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	e4 e3       	ldi	r30, 0x34	; 52
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	48 2f       	mov	r20, r24
 234:	8a 81       	ldd	r24, Y+2	; 0x02
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <MDIO_voidSetPinDirection+0x192>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	2a 95       	dec	r18
 246:	e2 f7       	brpl	.-8      	; 0x240 <MDIO_voidSetPinDirection+0x18e>
 248:	80 95       	com	r24
 24a:	84 23       	and	r24, r20
 24c:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	case PORTD:
		switch(A_u8DirectionId)
 24e:	8b 81       	ldd	r24, Y+3	; 0x03
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	3d 83       	std	Y+5, r19	; 0x05
 256:	2c 83       	std	Y+4, r18	; 0x04
 258:	8c 81       	ldd	r24, Y+4	; 0x04
 25a:	9d 81       	ldd	r25, Y+5	; 0x05
 25c:	00 97       	sbiw	r24, 0x00	; 0
 25e:	c9 f0       	breq	.+50     	; 0x292 <MDIO_voidSetPinDirection+0x1e0>
 260:	2c 81       	ldd	r18, Y+4	; 0x04
 262:	3d 81       	ldd	r19, Y+5	; 0x05
 264:	21 30       	cpi	r18, 0x01	; 1
 266:	31 05       	cpc	r19, r1
 268:	41 f5       	brne	.+80     	; 0x2ba <MDIO_voidSetPinDirection+0x208>
		{
		case PIN_OUTPUT:
			SET_BIT(DDRD_REG , A_u8PinId);
 26a:	a1 e3       	ldi	r26, 0x31	; 49
 26c:	b0 e0       	ldi	r27, 0x00	; 0
 26e:	e1 e3       	ldi	r30, 0x31	; 49
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	48 2f       	mov	r20, r24
 276:	8a 81       	ldd	r24, Y+2	; 0x02
 278:	28 2f       	mov	r18, r24
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 2e       	mov	r0, r18
 282:	02 c0       	rjmp	.+4      	; 0x288 <MDIO_voidSetPinDirection+0x1d6>
 284:	88 0f       	add	r24, r24
 286:	99 1f       	adc	r25, r25
 288:	0a 94       	dec	r0
 28a:	e2 f7       	brpl	.-8      	; 0x284 <MDIO_voidSetPinDirection+0x1d2>
 28c:	84 2b       	or	r24, r20
 28e:	8c 93       	st	X, r24
 290:	14 c0       	rjmp	.+40     	; 0x2ba <MDIO_voidSetPinDirection+0x208>
			break;
		case PIN_INPUT:
			CLR_BIT(DDRD_REG , A_u8PinId);
 292:	a1 e3       	ldi	r26, 0x31	; 49
 294:	b0 e0       	ldi	r27, 0x00	; 0
 296:	e1 e3       	ldi	r30, 0x31	; 49
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	80 81       	ld	r24, Z
 29c:	48 2f       	mov	r20, r24
 29e:	8a 81       	ldd	r24, Y+2	; 0x02
 2a0:	28 2f       	mov	r18, r24
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	02 2e       	mov	r0, r18
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <MDIO_voidSetPinDirection+0x1fe>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	0a 94       	dec	r0
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <MDIO_voidSetPinDirection+0x1fa>
 2b4:	80 95       	com	r24
 2b6:	84 23       	and	r24, r20
 2b8:	8c 93       	st	X, r24
			break;
		}
	default:
		break;
	}
}
 2ba:	2d 96       	adiw	r28, 0x0d	; 13
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	f8 94       	cli
 2c0:	de bf       	out	0x3e, r29	; 62
 2c2:	0f be       	out	0x3f, r0	; 63
 2c4:	cd bf       	out	0x3d, r28	; 61
 2c6:	cf 91       	pop	r28
 2c8:	df 91       	pop	r29
 2ca:	08 95       	ret

000002cc <MDIO_voidSetPinValue>:

void MDIO_voidSetPinValue(u8 A_u8PortId, u8 A_u8PinId, u8 A_u8Value)
{
 2cc:	df 93       	push	r29
 2ce:	cf 93       	push	r28
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
 2d4:	2d 97       	sbiw	r28, 0x0d	; 13
 2d6:	0f b6       	in	r0, 0x3f	; 63
 2d8:	f8 94       	cli
 2da:	de bf       	out	0x3e, r29	; 62
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	cd bf       	out	0x3d, r28	; 61
 2e0:	89 83       	std	Y+1, r24	; 0x01
 2e2:	6a 83       	std	Y+2, r22	; 0x02
 2e4:	4b 83       	std	Y+3, r20	; 0x03
	switch(A_u8PortId)
 2e6:	89 81       	ldd	r24, Y+1	; 0x01
 2e8:	28 2f       	mov	r18, r24
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	3d 87       	std	Y+13, r19	; 0x0d
 2ee:	2c 87       	std	Y+12, r18	; 0x0c
 2f0:	8c 85       	ldd	r24, Y+12	; 0x0c
 2f2:	9d 85       	ldd	r25, Y+13	; 0x0d
 2f4:	81 30       	cpi	r24, 0x01	; 1
 2f6:	91 05       	cpc	r25, r1
 2f8:	09 f4       	brne	.+2      	; 0x2fc <MDIO_voidSetPinValue+0x30>
 2fa:	4c c0       	rjmp	.+152    	; 0x394 <MDIO_voidSetPinValue+0xc8>
 2fc:	2c 85       	ldd	r18, Y+12	; 0x0c
 2fe:	3d 85       	ldd	r19, Y+13	; 0x0d
 300:	22 30       	cpi	r18, 0x02	; 2
 302:	31 05       	cpc	r19, r1
 304:	2c f4       	brge	.+10     	; 0x310 <MDIO_voidSetPinValue+0x44>
 306:	8c 85       	ldd	r24, Y+12	; 0x0c
 308:	9d 85       	ldd	r25, Y+13	; 0x0d
 30a:	00 97       	sbiw	r24, 0x00	; 0
 30c:	71 f0       	breq	.+28     	; 0x32a <MDIO_voidSetPinValue+0x5e>
 30e:	e2 c0       	rjmp	.+452    	; 0x4d4 <MDIO_voidSetPinValue+0x208>
 310:	2c 85       	ldd	r18, Y+12	; 0x0c
 312:	3d 85       	ldd	r19, Y+13	; 0x0d
 314:	22 30       	cpi	r18, 0x02	; 2
 316:	31 05       	cpc	r19, r1
 318:	09 f4       	brne	.+2      	; 0x31c <MDIO_voidSetPinValue+0x50>
 31a:	71 c0       	rjmp	.+226    	; 0x3fe <MDIO_voidSetPinValue+0x132>
 31c:	8c 85       	ldd	r24, Y+12	; 0x0c
 31e:	9d 85       	ldd	r25, Y+13	; 0x0d
 320:	83 30       	cpi	r24, 0x03	; 3
 322:	91 05       	cpc	r25, r1
 324:	09 f4       	brne	.+2      	; 0x328 <MDIO_voidSetPinValue+0x5c>
 326:	a0 c0       	rjmp	.+320    	; 0x468 <MDIO_voidSetPinValue+0x19c>
 328:	d5 c0       	rjmp	.+426    	; 0x4d4 <MDIO_voidSetPinValue+0x208>
	{
	case PORTA:
		switch(A_u8Value)
 32a:	8b 81       	ldd	r24, Y+3	; 0x03
 32c:	28 2f       	mov	r18, r24
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	3b 87       	std	Y+11, r19	; 0x0b
 332:	2a 87       	std	Y+10, r18	; 0x0a
 334:	8a 85       	ldd	r24, Y+10	; 0x0a
 336:	9b 85       	ldd	r25, Y+11	; 0x0b
 338:	00 97       	sbiw	r24, 0x00	; 0
 33a:	c9 f0       	breq	.+50     	; 0x36e <MDIO_voidSetPinValue+0xa2>
 33c:	2a 85       	ldd	r18, Y+10	; 0x0a
 33e:	3b 85       	ldd	r19, Y+11	; 0x0b
 340:	21 30       	cpi	r18, 0x01	; 1
 342:	31 05       	cpc	r19, r1
 344:	39 f5       	brne	.+78     	; 0x394 <MDIO_voidSetPinValue+0xc8>
		{
		case (PIN_HIGH || PIN_PULLUP):
			SET_BIT(PORTA_REG,A_u8PinId);
 346:	ab e3       	ldi	r26, 0x3B	; 59
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	eb e3       	ldi	r30, 0x3B	; 59
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	48 2f       	mov	r20, r24
 352:	8a 81       	ldd	r24, Y+2	; 0x02
 354:	28 2f       	mov	r18, r24
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	02 2e       	mov	r0, r18
 35e:	02 c0       	rjmp	.+4      	; 0x364 <MDIO_voidSetPinValue+0x98>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	0a 94       	dec	r0
 366:	e2 f7       	brpl	.-8      	; 0x360 <MDIO_voidSetPinValue+0x94>
 368:	84 2b       	or	r24, r20
 36a:	8c 93       	st	X, r24
 36c:	13 c0       	rjmp	.+38     	; 0x394 <MDIO_voidSetPinValue+0xc8>
			break;
		case (PIN_LOW || PIN_FLOATING):
			CLR_BIT(PORTA_REG,A_u8PinId);
 36e:	ab e3       	ldi	r26, 0x3B	; 59
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	eb e3       	ldi	r30, 0x3B	; 59
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	48 2f       	mov	r20, r24
 37a:	8a 81       	ldd	r24, Y+2	; 0x02
 37c:	28 2f       	mov	r18, r24
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	02 c0       	rjmp	.+4      	; 0x38a <MDIO_voidSetPinValue+0xbe>
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	2a 95       	dec	r18
 38c:	e2 f7       	brpl	.-8      	; 0x386 <MDIO_voidSetPinValue+0xba>
 38e:	80 95       	com	r24
 390:	84 23       	and	r24, r20
 392:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
	case PORTB:
		switch(A_u8Value)
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	39 87       	std	Y+9, r19	; 0x09
 39c:	28 87       	std	Y+8, r18	; 0x08
 39e:	88 85       	ldd	r24, Y+8	; 0x08
 3a0:	99 85       	ldd	r25, Y+9	; 0x09
 3a2:	00 97       	sbiw	r24, 0x00	; 0
 3a4:	c9 f0       	breq	.+50     	; 0x3d8 <MDIO_voidSetPinValue+0x10c>
 3a6:	28 85       	ldd	r18, Y+8	; 0x08
 3a8:	39 85       	ldd	r19, Y+9	; 0x09
 3aa:	21 30       	cpi	r18, 0x01	; 1
 3ac:	31 05       	cpc	r19, r1
 3ae:	39 f5       	brne	.+78     	; 0x3fe <MDIO_voidSetPinValue+0x132>
		{
		case (PIN_HIGH || PIN_PULLUP):
			SET_BIT(PORTB_REG,A_u8PinId);
 3b0:	a8 e3       	ldi	r26, 0x38	; 56
 3b2:	b0 e0       	ldi	r27, 0x00	; 0
 3b4:	e8 e3       	ldi	r30, 0x38	; 56
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	48 2f       	mov	r20, r24
 3bc:	8a 81       	ldd	r24, Y+2	; 0x02
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 2e       	mov	r0, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <MDIO_voidSetPinValue+0x102>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <MDIO_voidSetPinValue+0xfe>
 3d2:	84 2b       	or	r24, r20
 3d4:	8c 93       	st	X, r24
 3d6:	13 c0       	rjmp	.+38     	; 0x3fe <MDIO_voidSetPinValue+0x132>
			break;
		case (PIN_LOW || PIN_FLOATING):
			CLR_BIT(PORTB_REG,A_u8PinId);
 3d8:	a8 e3       	ldi	r26, 0x38	; 56
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	e8 e3       	ldi	r30, 0x38	; 56
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	48 2f       	mov	r20, r24
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
 3e6:	28 2f       	mov	r18, r24
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <MDIO_voidSetPinValue+0x128>
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	2a 95       	dec	r18
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <MDIO_voidSetPinValue+0x124>
 3f8:	80 95       	com	r24
 3fa:	84 23       	and	r24, r20
 3fc:	8c 93       	st	X, r24
			break;
		default:
			break;
		}
		case PORTC:
			switch(A_u8Value)
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	28 2f       	mov	r18, r24
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	3f 83       	std	Y+7, r19	; 0x07
 406:	2e 83       	std	Y+6, r18	; 0x06
 408:	8e 81       	ldd	r24, Y+6	; 0x06
 40a:	9f 81       	ldd	r25, Y+7	; 0x07
 40c:	00 97       	sbiw	r24, 0x00	; 0
 40e:	c9 f0       	breq	.+50     	; 0x442 <MDIO_voidSetPinValue+0x176>
 410:	2e 81       	ldd	r18, Y+6	; 0x06
 412:	3f 81       	ldd	r19, Y+7	; 0x07
 414:	21 30       	cpi	r18, 0x01	; 1
 416:	31 05       	cpc	r19, r1
 418:	39 f5       	brne	.+78     	; 0x468 <MDIO_voidSetPinValue+0x19c>
			{
			case (PIN_HIGH || PIN_PULLUP):
				SET_BIT(PORTC_REG,A_u8PinId);
 41a:	a5 e3       	ldi	r26, 0x35	; 53
 41c:	b0 e0       	ldi	r27, 0x00	; 0
 41e:	e5 e3       	ldi	r30, 0x35	; 53
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	80 81       	ld	r24, Z
 424:	48 2f       	mov	r20, r24
 426:	8a 81       	ldd	r24, Y+2	; 0x02
 428:	28 2f       	mov	r18, r24
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	02 2e       	mov	r0, r18
 432:	02 c0       	rjmp	.+4      	; 0x438 <MDIO_voidSetPinValue+0x16c>
 434:	88 0f       	add	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	0a 94       	dec	r0
 43a:	e2 f7       	brpl	.-8      	; 0x434 <MDIO_voidSetPinValue+0x168>
 43c:	84 2b       	or	r24, r20
 43e:	8c 93       	st	X, r24
 440:	13 c0       	rjmp	.+38     	; 0x468 <MDIO_voidSetPinValue+0x19c>
				break;
			case (PIN_LOW || PIN_FLOATING):
				CLR_BIT(PORTC_REG,A_u8PinId);
 442:	a5 e3       	ldi	r26, 0x35	; 53
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e5 e3       	ldi	r30, 0x35	; 53
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	48 2f       	mov	r20, r24
 44e:	8a 81       	ldd	r24, Y+2	; 0x02
 450:	28 2f       	mov	r18, r24
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <MDIO_voidSetPinValue+0x192>
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	2a 95       	dec	r18
 460:	e2 f7       	brpl	.-8      	; 0x45a <MDIO_voidSetPinValue+0x18e>
 462:	80 95       	com	r24
 464:	84 23       	and	r24, r20
 466:	8c 93       	st	X, r24
				break;
			default:
				break;
			}
	case PORTD:
		switch(A_u8Value)
 468:	8b 81       	ldd	r24, Y+3	; 0x03
 46a:	28 2f       	mov	r18, r24
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	3d 83       	std	Y+5, r19	; 0x05
 470:	2c 83       	std	Y+4, r18	; 0x04
 472:	8c 81       	ldd	r24, Y+4	; 0x04
 474:	9d 81       	ldd	r25, Y+5	; 0x05
 476:	00 97       	sbiw	r24, 0x00	; 0
 478:	c9 f0       	breq	.+50     	; 0x4ac <MDIO_voidSetPinValue+0x1e0>
 47a:	2c 81       	ldd	r18, Y+4	; 0x04
 47c:	3d 81       	ldd	r19, Y+5	; 0x05
 47e:	21 30       	cpi	r18, 0x01	; 1
 480:	31 05       	cpc	r19, r1
 482:	41 f5       	brne	.+80     	; 0x4d4 <MDIO_voidSetPinValue+0x208>
		{
		case (PIN_HIGH || PIN_PULLUP):
			SET_BIT(PORTD_REG,A_u8PinId);
 484:	a2 e3       	ldi	r26, 0x32	; 50
 486:	b0 e0       	ldi	r27, 0x00	; 0
 488:	e2 e3       	ldi	r30, 0x32	; 50
 48a:	f0 e0       	ldi	r31, 0x00	; 0
 48c:	80 81       	ld	r24, Z
 48e:	48 2f       	mov	r20, r24
 490:	8a 81       	ldd	r24, Y+2	; 0x02
 492:	28 2f       	mov	r18, r24
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	02 2e       	mov	r0, r18
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <MDIO_voidSetPinValue+0x1d6>
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	0a 94       	dec	r0
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <MDIO_voidSetPinValue+0x1d2>
 4a6:	84 2b       	or	r24, r20
 4a8:	8c 93       	st	X, r24
 4aa:	14 c0       	rjmp	.+40     	; 0x4d4 <MDIO_voidSetPinValue+0x208>
			break;
		case (PIN_LOW || PIN_FLOATING):
			CLR_BIT(PORTD_REG,A_u8PinId);
 4ac:	a2 e3       	ldi	r26, 0x32	; 50
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	e2 e3       	ldi	r30, 0x32	; 50
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	48 2f       	mov	r20, r24
 4b8:	8a 81       	ldd	r24, Y+2	; 0x02
 4ba:	28 2f       	mov	r18, r24
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	02 2e       	mov	r0, r18
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <MDIO_voidSetPinValue+0x1fe>
 4c6:	88 0f       	add	r24, r24
 4c8:	99 1f       	adc	r25, r25
 4ca:	0a 94       	dec	r0
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <MDIO_voidSetPinValue+0x1fa>
 4ce:	80 95       	com	r24
 4d0:	84 23       	and	r24, r20
 4d2:	8c 93       	st	X, r24
			break;
		}
		default:
				break;
	}
}
 4d4:	2d 96       	adiw	r28, 0x0d	; 13
 4d6:	0f b6       	in	r0, 0x3f	; 63
 4d8:	f8 94       	cli
 4da:	de bf       	out	0x3e, r29	; 62
 4dc:	0f be       	out	0x3f, r0	; 63
 4de:	cd bf       	out	0x3d, r28	; 61
 4e0:	cf 91       	pop	r28
 4e2:	df 91       	pop	r29
 4e4:	08 95       	ret

000004e6 <MDIO_u8GetPinValue>:

u8 MDIO_u8GetPinValue(u8 A_u8PortId,u8 A_u8PinId)
{
 4e6:	df 93       	push	r29
 4e8:	cf 93       	push	r28
 4ea:	00 d0       	rcall	.+0      	; 0x4ec <MDIO_u8GetPinValue+0x6>
 4ec:	00 d0       	rcall	.+0      	; 0x4ee <MDIO_u8GetPinValue+0x8>
 4ee:	0f 92       	push	r0
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	8a 83       	std	Y+2, r24	; 0x02
 4f6:	6b 83       	std	Y+3, r22	; 0x03
	u8 local_u8PinValue=0;
 4f8:	19 82       	std	Y+1, r1	; 0x01
	switch(A_u8PortId)
 4fa:	8a 81       	ldd	r24, Y+2	; 0x02
 4fc:	28 2f       	mov	r18, r24
 4fe:	30 e0       	ldi	r19, 0x00	; 0
 500:	3d 83       	std	Y+5, r19	; 0x05
 502:	2c 83       	std	Y+4, r18	; 0x04
 504:	4c 81       	ldd	r20, Y+4	; 0x04
 506:	5d 81       	ldd	r21, Y+5	; 0x05
 508:	41 30       	cpi	r20, 0x01	; 1
 50a:	51 05       	cpc	r21, r1
 50c:	41 f1       	breq	.+80     	; 0x55e <MDIO_u8GetPinValue+0x78>
 50e:	8c 81       	ldd	r24, Y+4	; 0x04
 510:	9d 81       	ldd	r25, Y+5	; 0x05
 512:	82 30       	cpi	r24, 0x02	; 2
 514:	91 05       	cpc	r25, r1
 516:	34 f4       	brge	.+12     	; 0x524 <MDIO_u8GetPinValue+0x3e>
 518:	2c 81       	ldd	r18, Y+4	; 0x04
 51a:	3d 81       	ldd	r19, Y+5	; 0x05
 51c:	21 15       	cp	r18, r1
 51e:	31 05       	cpc	r19, r1
 520:	61 f0       	breq	.+24     	; 0x53a <MDIO_u8GetPinValue+0x54>
 522:	52 c0       	rjmp	.+164    	; 0x5c8 <MDIO_u8GetPinValue+0xe2>
 524:	4c 81       	ldd	r20, Y+4	; 0x04
 526:	5d 81       	ldd	r21, Y+5	; 0x05
 528:	42 30       	cpi	r20, 0x02	; 2
 52a:	51 05       	cpc	r21, r1
 52c:	51 f1       	breq	.+84     	; 0x582 <MDIO_u8GetPinValue+0x9c>
 52e:	8c 81       	ldd	r24, Y+4	; 0x04
 530:	9d 81       	ldd	r25, Y+5	; 0x05
 532:	83 30       	cpi	r24, 0x03	; 3
 534:	91 05       	cpc	r25, r1
 536:	b9 f1       	breq	.+110    	; 0x5a6 <MDIO_u8GetPinValue+0xc0>
 538:	47 c0       	rjmp	.+142    	; 0x5c8 <MDIO_u8GetPinValue+0xe2>
	{
	case PORTA:
		local_u8PinValue = GET_BIT(PINA_REG, A_u8PinId);
 53a:	e9 e3       	ldi	r30, 0x39	; 57
 53c:	f0 e0       	ldi	r31, 0x00	; 0
 53e:	80 81       	ld	r24, Z
 540:	28 2f       	mov	r18, r24
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	8b 81       	ldd	r24, Y+3	; 0x03
 546:	88 2f       	mov	r24, r24
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	a9 01       	movw	r20, r18
 54c:	02 c0       	rjmp	.+4      	; 0x552 <MDIO_u8GetPinValue+0x6c>
 54e:	55 95       	asr	r21
 550:	47 95       	ror	r20
 552:	8a 95       	dec	r24
 554:	e2 f7       	brpl	.-8      	; 0x54e <MDIO_u8GetPinValue+0x68>
 556:	ca 01       	movw	r24, r20
 558:	81 70       	andi	r24, 0x01	; 1
 55a:	89 83       	std	Y+1, r24	; 0x01
 55c:	35 c0       	rjmp	.+106    	; 0x5c8 <MDIO_u8GetPinValue+0xe2>
		break;
	case PORTB:
		local_u8PinValue = GET_BIT(PINB_REG, A_u8PinId);
 55e:	e6 e3       	ldi	r30, 0x36	; 54
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	80 81       	ld	r24, Z
 564:	28 2f       	mov	r18, r24
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	8b 81       	ldd	r24, Y+3	; 0x03
 56a:	88 2f       	mov	r24, r24
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	a9 01       	movw	r20, r18
 570:	02 c0       	rjmp	.+4      	; 0x576 <MDIO_u8GetPinValue+0x90>
 572:	55 95       	asr	r21
 574:	47 95       	ror	r20
 576:	8a 95       	dec	r24
 578:	e2 f7       	brpl	.-8      	; 0x572 <MDIO_u8GetPinValue+0x8c>
 57a:	ca 01       	movw	r24, r20
 57c:	81 70       	andi	r24, 0x01	; 1
 57e:	89 83       	std	Y+1, r24	; 0x01
 580:	23 c0       	rjmp	.+70     	; 0x5c8 <MDIO_u8GetPinValue+0xe2>
		break;
	case PORTC:
		local_u8PinValue =GET_BIT(PINC_REG, A_u8PinId);
 582:	e3 e3       	ldi	r30, 0x33	; 51
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	80 81       	ld	r24, Z
 588:	28 2f       	mov	r18, r24
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	8b 81       	ldd	r24, Y+3	; 0x03
 58e:	88 2f       	mov	r24, r24
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	a9 01       	movw	r20, r18
 594:	02 c0       	rjmp	.+4      	; 0x59a <MDIO_u8GetPinValue+0xb4>
 596:	55 95       	asr	r21
 598:	47 95       	ror	r20
 59a:	8a 95       	dec	r24
 59c:	e2 f7       	brpl	.-8      	; 0x596 <MDIO_u8GetPinValue+0xb0>
 59e:	ca 01       	movw	r24, r20
 5a0:	81 70       	andi	r24, 0x01	; 1
 5a2:	89 83       	std	Y+1, r24	; 0x01
 5a4:	11 c0       	rjmp	.+34     	; 0x5c8 <MDIO_u8GetPinValue+0xe2>
		break;
	case PORTD:
		local_u8PinValue =GET_BIT(PIND_REG, A_u8PinId);
 5a6:	e0 e3       	ldi	r30, 0x30	; 48
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	80 81       	ld	r24, Z
 5ac:	28 2f       	mov	r18, r24
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	88 2f       	mov	r24, r24
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	a9 01       	movw	r20, r18
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <MDIO_u8GetPinValue+0xd8>
 5ba:	55 95       	asr	r21
 5bc:	47 95       	ror	r20
 5be:	8a 95       	dec	r24
 5c0:	e2 f7       	brpl	.-8      	; 0x5ba <MDIO_u8GetPinValue+0xd4>
 5c2:	ca 01       	movw	r24, r20
 5c4:	81 70       	andi	r24, 0x01	; 1
 5c6:	89 83       	std	Y+1, r24	; 0x01
		break;
	default:
		break;
	}
	return local_u8PinValue;
 5c8:	89 81       	ldd	r24, Y+1	; 0x01
}
 5ca:	0f 90       	pop	r0
 5cc:	0f 90       	pop	r0
 5ce:	0f 90       	pop	r0
 5d0:	0f 90       	pop	r0
 5d2:	0f 90       	pop	r0
 5d4:	cf 91       	pop	r28
 5d6:	df 91       	pop	r29
 5d8:	08 95       	ret

000005da <MDIO_u8SetPortDirection>:

void MDIO_u8SetPortDirection(u8 A_u8PortId,u8 A_u8Direction)
{
 5da:	df 93       	push	r29
 5dc:	cf 93       	push	r28
 5de:	00 d0       	rcall	.+0      	; 0x5e0 <MDIO_u8SetPortDirection+0x6>
 5e0:	00 d0       	rcall	.+0      	; 0x5e2 <MDIO_u8SetPortDirection+0x8>
 5e2:	cd b7       	in	r28, 0x3d	; 61
 5e4:	de b7       	in	r29, 0x3e	; 62
 5e6:	89 83       	std	Y+1, r24	; 0x01
 5e8:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortId)
 5ea:	89 81       	ldd	r24, Y+1	; 0x01
 5ec:	28 2f       	mov	r18, r24
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	3c 83       	std	Y+4, r19	; 0x04
 5f2:	2b 83       	std	Y+3, r18	; 0x03
 5f4:	8b 81       	ldd	r24, Y+3	; 0x03
 5f6:	9c 81       	ldd	r25, Y+4	; 0x04
 5f8:	81 30       	cpi	r24, 0x01	; 1
 5fa:	91 05       	cpc	r25, r1
 5fc:	d1 f0       	breq	.+52     	; 0x632 <MDIO_u8SetPortDirection+0x58>
 5fe:	2b 81       	ldd	r18, Y+3	; 0x03
 600:	3c 81       	ldd	r19, Y+4	; 0x04
 602:	22 30       	cpi	r18, 0x02	; 2
 604:	31 05       	cpc	r19, r1
 606:	2c f4       	brge	.+10     	; 0x612 <MDIO_u8SetPortDirection+0x38>
 608:	8b 81       	ldd	r24, Y+3	; 0x03
 60a:	9c 81       	ldd	r25, Y+4	; 0x04
 60c:	00 97       	sbiw	r24, 0x00	; 0
 60e:	61 f0       	breq	.+24     	; 0x628 <MDIO_u8SetPortDirection+0x4e>
 610:	1e c0       	rjmp	.+60     	; 0x64e <MDIO_u8SetPortDirection+0x74>
 612:	2b 81       	ldd	r18, Y+3	; 0x03
 614:	3c 81       	ldd	r19, Y+4	; 0x04
 616:	22 30       	cpi	r18, 0x02	; 2
 618:	31 05       	cpc	r19, r1
 61a:	81 f0       	breq	.+32     	; 0x63c <MDIO_u8SetPortDirection+0x62>
 61c:	8b 81       	ldd	r24, Y+3	; 0x03
 61e:	9c 81       	ldd	r25, Y+4	; 0x04
 620:	83 30       	cpi	r24, 0x03	; 3
 622:	91 05       	cpc	r25, r1
 624:	81 f0       	breq	.+32     	; 0x646 <MDIO_u8SetPortDirection+0x6c>
 626:	13 c0       	rjmp	.+38     	; 0x64e <MDIO_u8SetPortDirection+0x74>
	{
	case PORTA:
		DDRA_REG = A_u8Direction;
 628:	ea e3       	ldi	r30, 0x3A	; 58
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	8a 81       	ldd	r24, Y+2	; 0x02
 62e:	80 83       	st	Z, r24
 630:	0e c0       	rjmp	.+28     	; 0x64e <MDIO_u8SetPortDirection+0x74>
		break;
	case PORTB:
		DDRB_REG = A_u8Direction;
 632:	e7 e3       	ldi	r30, 0x37	; 55
 634:	f0 e0       	ldi	r31, 0x00	; 0
 636:	8a 81       	ldd	r24, Y+2	; 0x02
 638:	80 83       	st	Z, r24
 63a:	09 c0       	rjmp	.+18     	; 0x64e <MDIO_u8SetPortDirection+0x74>
		break;
	case PORTC:
		DDRC_REG = A_u8Direction;
 63c:	e4 e3       	ldi	r30, 0x34	; 52
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	8a 81       	ldd	r24, Y+2	; 0x02
 642:	80 83       	st	Z, r24
 644:	04 c0       	rjmp	.+8      	; 0x64e <MDIO_u8SetPortDirection+0x74>
		break;
	case PORTD:
		DDRD_REG = A_u8Direction;
 646:	e1 e3       	ldi	r30, 0x31	; 49
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	8a 81       	ldd	r24, Y+2	; 0x02
 64c:	80 83       	st	Z, r24
		break;
	default:
		break;
	}
}
 64e:	0f 90       	pop	r0
 650:	0f 90       	pop	r0
 652:	0f 90       	pop	r0
 654:	0f 90       	pop	r0
 656:	cf 91       	pop	r28
 658:	df 91       	pop	r29
 65a:	08 95       	ret

0000065c <MDIO_u8SetPortValue>:

void MDIO_u8SetPortValue(u8 A_u8PortId,u8 A_u8Value)
{
 65c:	df 93       	push	r29
 65e:	cf 93       	push	r28
 660:	00 d0       	rcall	.+0      	; 0x662 <MDIO_u8SetPortValue+0x6>
 662:	00 d0       	rcall	.+0      	; 0x664 <MDIO_u8SetPortValue+0x8>
 664:	cd b7       	in	r28, 0x3d	; 61
 666:	de b7       	in	r29, 0x3e	; 62
 668:	89 83       	std	Y+1, r24	; 0x01
 66a:	6a 83       	std	Y+2, r22	; 0x02
	switch(A_u8PortId)
 66c:	89 81       	ldd	r24, Y+1	; 0x01
 66e:	28 2f       	mov	r18, r24
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	3c 83       	std	Y+4, r19	; 0x04
 674:	2b 83       	std	Y+3, r18	; 0x03
 676:	8b 81       	ldd	r24, Y+3	; 0x03
 678:	9c 81       	ldd	r25, Y+4	; 0x04
 67a:	81 30       	cpi	r24, 0x01	; 1
 67c:	91 05       	cpc	r25, r1
 67e:	d1 f0       	breq	.+52     	; 0x6b4 <MDIO_u8SetPortValue+0x58>
 680:	2b 81       	ldd	r18, Y+3	; 0x03
 682:	3c 81       	ldd	r19, Y+4	; 0x04
 684:	22 30       	cpi	r18, 0x02	; 2
 686:	31 05       	cpc	r19, r1
 688:	2c f4       	brge	.+10     	; 0x694 <MDIO_u8SetPortValue+0x38>
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	9c 81       	ldd	r25, Y+4	; 0x04
 68e:	00 97       	sbiw	r24, 0x00	; 0
 690:	61 f0       	breq	.+24     	; 0x6aa <MDIO_u8SetPortValue+0x4e>
 692:	1e c0       	rjmp	.+60     	; 0x6d0 <MDIO_u8SetPortValue+0x74>
 694:	2b 81       	ldd	r18, Y+3	; 0x03
 696:	3c 81       	ldd	r19, Y+4	; 0x04
 698:	22 30       	cpi	r18, 0x02	; 2
 69a:	31 05       	cpc	r19, r1
 69c:	81 f0       	breq	.+32     	; 0x6be <MDIO_u8SetPortValue+0x62>
 69e:	8b 81       	ldd	r24, Y+3	; 0x03
 6a0:	9c 81       	ldd	r25, Y+4	; 0x04
 6a2:	83 30       	cpi	r24, 0x03	; 3
 6a4:	91 05       	cpc	r25, r1
 6a6:	81 f0       	breq	.+32     	; 0x6c8 <MDIO_u8SetPortValue+0x6c>
 6a8:	13 c0       	rjmp	.+38     	; 0x6d0 <MDIO_u8SetPortValue+0x74>
	{
	case PORTA:
		PORTA_REG = A_u8Value;
 6aa:	eb e3       	ldi	r30, 0x3B	; 59
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	8a 81       	ldd	r24, Y+2	; 0x02
 6b0:	80 83       	st	Z, r24
 6b2:	0e c0       	rjmp	.+28     	; 0x6d0 <MDIO_u8SetPortValue+0x74>
		break;
	case PORTB:
		PORTB_REG = A_u8Value;
 6b4:	e8 e3       	ldi	r30, 0x38	; 56
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ba:	80 83       	st	Z, r24
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <MDIO_u8SetPortValue+0x74>
		break;
	case PORTC:
		PORTC_REG = A_u8Value;
 6be:	e5 e3       	ldi	r30, 0x35	; 53
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	8a 81       	ldd	r24, Y+2	; 0x02
 6c4:	80 83       	st	Z, r24
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <MDIO_u8SetPortValue+0x74>
		break;
	case PORTD:
		PORTD_REG = A_u8Value;
 6c8:	e2 e3       	ldi	r30, 0x32	; 50
 6ca:	f0 e0       	ldi	r31, 0x00	; 0
 6cc:	8a 81       	ldd	r24, Y+2	; 0x02
 6ce:	80 83       	st	Z, r24
		break;
	default:
		break;
	}
}
 6d0:	0f 90       	pop	r0
 6d2:	0f 90       	pop	r0
 6d4:	0f 90       	pop	r0
 6d6:	0f 90       	pop	r0
 6d8:	cf 91       	pop	r28
 6da:	df 91       	pop	r29
 6dc:	08 95       	ret

000006de <main>:
#include "../Include/MCAL/DIO/DIO_Interface.h"
#include "../Include/MCAL/DIO/DIO_Private.h"
#include "../Include/MCAL/DIO/DIO_Configuration.h"

void main(void)
{
 6de:	df 93       	push	r29
 6e0:	cf 93       	push	r28
 6e2:	cd b7       	in	r28, 0x3d	; 61
 6e4:	de b7       	in	r29, 0x3e	; 62
	MDIO_voidInt();
 6e6:	0e 94 36 00 	call	0x6c	; 0x6c <MDIO_voidInt>
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <main+0xc>

000006ec <_exit>:
 6ec:	f8 94       	cli

000006ee <__stop_program>:
 6ee:	ff cf       	rjmp	.-2      	; 0x6ee <__stop_program>
